[   {"title": "Multi-Lingual Sentiment Analysis","description": "Deep learning model that can classify sentiment in text across 13 Indian languages into two categories: Positive or Negative.","image": "./img/mlsa.png","link": "https://github.com/the-y9/Multi-Lingual","tags": ["Deep Learning", "Llama", "Sentiment Analysis", "NLP", "Python", "Text Classification", "Multi-Lingual", "Meta", "Llama", "LLama 3 8B Instruct Model", "Embeddings"],"lessons": "Gained a deep understanding of multilingual NLP and model generalization across languages. Learned how to align embeddings across diverse scripts and tokenization strategies.","challenges": "Handling low-resource Indian languages posed difficulties in tokenization, model training consistency, and representation balance."},
    {"title": "Health Bot","description": "A health-related chatbot that provides information and answers to health-related queries using a knowledge base.","image": "./img/health_bot.png","link": "https://github.com/the-y9/health-bot","tags": ["Qdrant", "Chatbot", "RAG", "FastAPI", "Gemini", "Sentence-Transformers", "Embeddings", "NLP", "Python"],"lessons": "Learned to build reliable RAG pipelines and navigate ethical implications in healthcare AI applications.","challenges": "Ensuring factual accuracy, avoiding hallucinations, and managing a constantly evolving knowledge base."},
    {"title": "Thyroid Recurrence Prediction","description": "An end to end machine learning prototype that predicts the recurrence of thyroid cancer","image": "./img/thyroid.png","link": "https://github.com/the-y9/thyroid_cancer_recurrence","demo": "https://thyroid-cancer-recurrence-868l.onrender.com/","tags": ["Machine Learning", "MlFlow", "SHAP", "FastAPI", "Healthcare", "Python", "Data Science", "Predictive Modeling"],"lessons": "Grew in deploying interpretable healthcare models using SHAP. Developed user-centric dashboards to explain model predictions.","challenges": "Dealing with class imbalance, sensitive medical data, and explaining model behavior to non-technical users."},
    {"title": "Project Tracker","description": "RAG-based chatbot system for project management and progress tracking using Google Gemini.","image": "./img/pro_track.png","demo": "https://soft-engg-project-sep-2024-se-sep-8.onrender.com","link": "https://github.com/the-y9/soft-engg-project-sep-2024-se-sep-8","tags": ["LLM", "Chatbot", "RAG", "Flask", "Gemini", "Project Management", "Progress Tracking", "Web Development", "Full Stack", "SQLite", "Python", "JavaScript"],"lessons": "Learned to streamline project tracking via natural language interfaces. Improved full-stack development coordination.","challenges": "Designing intuitive interaction flows and keeping project updates consistent and traceable through an LLM interface."},
    {"title": "Image Depth Estimation","description": "Evaluates relative depth using original image and generated depth map visualization.","image": "./img/img_depth.png","link": "https://github.com/the-y9/Image_Depth","tags": ["Computer Vision", "PyTorch", "Python", "Depth Estimation", "Image Processing", "Neural Networks"],"lessons": "Strengthened understanding of neural network vision models and learned to evaluate spatial relationships in imagery.","challenges": "Accurately visualizing and debugging depth prediction performance across diverse image inputs."},
    {"title": "Denoising and 4x Super-Resolution of Low-Light Images","description": "Enhances low-light images using denoising and super-resolution techniques.","image": "./img/denoising.png","link": "https://github.com/the-y9/Denoising","tags": ["SwinIR", "Image Processing", "Super-Resolution", "Denoising", "Python", "Deep Learning"],"lessons": "Explored the power of SwinIR and learned to fine-tune models on noisy datasets. Improved image quality evaluation skills.","challenges": "Handling severe noise, lighting inconsistencies, and slow convergence during training."},
    {"title": "Cam_Vision_Depth","description": "A computer vision application that captures video and uses MiDaS for depth estimation.","image": "./img/cam_vision_depth.png","link": "https://github.com/the-y9/Cam_Vision_Depth","tags": ["Computer Vision", "MiDaS", "Depth Estimation", "Python", "Video Processing", "Flask", "OpenCV"],"lessons": "Developed real-time processing pipelines and learned to optimize live video inference for computer vision tasks.","challenges": "Maintaining frame rate and stability in real-time video depth estimation with limited compute resources."},
    {"title": "Mental Health Classifier","description": "A Voting Classifier using multiple algorithms with 93.7% accuracy over unseen data.","image": "./img/mental_health.png","link": "https://www.kaggle.com/code/iitm21f1006461/notebook178b26bd29","tags": ["Scikit-learn", "Ensemble", "Classification", "Python", "Machine Learning", "Healthcare"],"lessons": "Understood the sensitivity of mental health data and importance of fairness in ML. Learned to use ensemble methods effectively.","challenges": "Data labeling quality and bias mitigation in psychological datasets."},
    {"title": "FAQ Bot","description": "A semantic search-based chatbot designed to answer frequently asked questions using Sentence-Transformers model and embeddings.","image": "./img/faq-bot.png","demo": "https://faq-bot-u90z.onrender.com/","link": "https://github.com/the-y9/FAQ-Bot","tags": ["Semantic Search", "Sentence-Transformers", "Embeddings", "NLP", "PyTorch", "Machine Learning", "Chatbot", "FAQ", "Python", "FastAPI", "JavaScript"],"lessons": "Learned to implement fast and accurate semantic search for real-world questions using embedding-based retrieval.","challenges": "Handling vague queries and optimizing vector similarity thresholds for better answer precision."},
    {"title": "Sentiment-Prediction-on-Movie-reviews","description": "A machine learning project focusing on sentiment analysis of movie reviews, utilizing regression and classification techniques.","image": "./img/sentiment_prediction.png","link": "https://github.com/the-y9/Sentiment-Prediction-on-Movie-reviews","tags": ["Sentiment Analysis", "Machine Learning", "Python", "NLP", "Text Analysis", "Regression", "Classification"],"lessons": "Practiced comparing regression vs classification in sentiment analysis. Improved feature engineering and model tuning skills.","challenges": "Text normalization, overfitting on small datasets, and choosing the right evaluation metrics."},
    {"title": "Backend for Tesseract OCR","description": "Flask API for image-to-text using Tesseract OCR, with bounding box detection.","image": "./img/word-bboxes.png","link": "https://github.com/the-y9/tesseract-ocr-api","tags": ["Flask", "OCR", "Tesseract", "Pillow", "API", "Python", "Text Recognition", "Image Processing"],"lessons": "Learned to integrate OCR with web APIs and handle image inputs efficiently. Built robust exception handling in production-ready APIs.","challenges": "Parsing varied image formats and dealing with OCR inconsistencies."},
    {"title": "FastAPI-Authentication-Starter-Pack","description": "A starter template for FastAPI applications, featuring user signup and login functionalities using Pydantic models and a clean service-based architecture.","image": "./img/fastapi_auth.png","link": "https://github.com/the-y9/FastAPI-Authentication-Starter-Pack","tags": ["FastAPI", "Authentication", "Pydantic", "Python", "Web Development", "API", "Security", "JavaScript"],"lessons": "Learned principles of clean backend architecture and secure authentication practices using FastAPI.","challenges": "Designing token-based auth flow and handling edge cases in user data validation."},
    {"title": "Blog Post Management System","description": "Built with FastAPI, MySQL, and Click, allowing users to create, retrieve, and search for blog posts and associated tags even on command line.","image": "./img/post-tag.png","link": "https://github.com/the-y9/post-tag","tags": ["FastAPI", "MySQL", "Blogging", "Python", "Database", "Web Development", "Content Management"],"lessons": "Learned to unify CLI and API interfaces and optimize relational data access in a blog system.","challenges": "Ensuring consistent database state and handling text search functionality across both UI and CLI."},
    {"title": "Library Management System","description": "Manages e-books and sections with Flask + Vue.js. Role-based access control for users and librarians.","image": "./img/lib_man.png","demo": "https://librarymanagement-7omf.onrender.com","link": "https://github.com/the-y9/LibraryManagement","tags": ["Flask", "Vue.js", "SQL", "Role-Based Access", "Full Stack", "Python", "JavaScript", "SQLite", "Web Development", "JavaScript"],"lessons": "Gained experience building secure, multi-role full-stack applications with real-time CRUD operations.","challenges": "Managing Vue.js state across user roles and syncing frontend/backend privileges cleanly."},
    {"title": "Business Data Management","description": "Data-Driven Optimization for B2B HVAC&R operations at Blue Star. Analysis, reporting, and strategy design.","image": "./img/icon.jpeg","link": "https://github.com/the-y9/BDM-Report","tags": ["Pandas", "Python", "Data Analysis", "Presentation", "Excel", "Reporting"],"lessons": "Learned to extract actionable insights from business data and present results clearly to non-technical stakeholders.","challenges": "Data wrangling and aligning reporting formats with the companyâ€™s decision-making needs."},
    {"title": "Web OCR","description": "A web application that extracts text from images using Tesseract OCR","image": "./img/web_ocr.png","demo": "https://the-y9.github.io/Web-OCR/","link": "https://github.com/the-y9/Web-OCR","tags": ["Tesseract OCR", "JavaScript", "Web Development", "HTML", "CSS", "Image Processing"],"lessons": "Learned about OCR limitations in browsers and improved skills in building client-side image processing tools.","challenges": "Performance optimization of Tesseract.js in real-time on client browsers."}
]